// Code generated by protoc-gen-go. DO NOT EDIT.
// source: MoveDTO.proto

package msg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vector3 struct {
	X                    *float32 `protobuf:"fixed32,1,req,name=x" json:"x,omitempty"`
	Y                    *float32 `protobuf:"fixed32,2,req,name=y" json:"y,omitempty"`
	Z                    *float32 `protobuf:"fixed32,3,req,name=z" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vector3) Reset()         { *m = Vector3{} }
func (m *Vector3) String() string { return proto.CompactTextString(m) }
func (*Vector3) ProtoMessage()    {}
func (*Vector3) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b3ac62fbb2e1db, []int{0}
}

func (m *Vector3) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vector3.Unmarshal(m, b)
}
func (m *Vector3) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vector3.Marshal(b, m, deterministic)
}
func (m *Vector3) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vector3.Merge(m, src)
}
func (m *Vector3) XXX_Size() int {
	return xxx_messageInfo_Vector3.Size(m)
}
func (m *Vector3) XXX_DiscardUnknown() {
	xxx_messageInfo_Vector3.DiscardUnknown(m)
}

var xxx_messageInfo_Vector3 proto.InternalMessageInfo

func (m *Vector3) GetX() float32 {
	if m != nil && m.X != nil {
		return *m.X
	}
	return 0
}

func (m *Vector3) GetY() float32 {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return 0
}

func (m *Vector3) GetZ() float32 {
	if m != nil && m.Z != nil {
		return *m.Z
	}
	return 0
}

type MoveDTO struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Point                *Vector3 `protobuf:"bytes,2,req,name=Point" json:"Point,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveDTO) Reset()         { *m = MoveDTO{} }
func (m *MoveDTO) String() string { return proto.CompactTextString(m) }
func (*MoveDTO) ProtoMessage()    {}
func (*MoveDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7b3ac62fbb2e1db, []int{1}
}

func (m *MoveDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveDTO.Unmarshal(m, b)
}
func (m *MoveDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveDTO.Marshal(b, m, deterministic)
}
func (m *MoveDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveDTO.Merge(m, src)
}
func (m *MoveDTO) XXX_Size() int {
	return xxx_messageInfo_MoveDTO.Size(m)
}
func (m *MoveDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveDTO.DiscardUnknown(m)
}

var xxx_messageInfo_MoveDTO proto.InternalMessageInfo

func (m *MoveDTO) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MoveDTO) GetPoint() *Vector3 {
	if m != nil {
		return m.Point
	}
	return nil
}

func init() {
	proto.RegisterType((*Vector3)(nil), "msg.Vector3")
	proto.RegisterType((*MoveDTO)(nil), "msg.MoveDTO")
}

func init() { proto.RegisterFile("MoveDTO.proto", fileDescriptor_e7b3ac62fbb2e1db) }

var fileDescriptor_e7b3ac62fbb2e1db = []byte{
	// 127 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xf5, 0xcd, 0x2f, 0x4b,
	0x75, 0x09, 0xf1, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2d, 0x4e, 0x57, 0x32,
	0xe6, 0x62, 0x0f, 0x4b, 0x4d, 0x2e, 0xc9, 0x2f, 0x32, 0x16, 0xe2, 0xe1, 0x62, 0xac, 0x90, 0x60,
	0x54, 0x60, 0xd2, 0x60, 0x0a, 0x62, 0xac, 0x00, 0xf1, 0x2a, 0x25, 0x98, 0x20, 0xbc, 0x4a, 0x10,
	0xaf, 0x4a, 0x82, 0x19, 0xc2, 0xab, 0x52, 0xb2, 0xe5, 0x62, 0x87, 0x1a, 0x25, 0xc4, 0xc7, 0xc5,
	0x94, 0x99, 0x02, 0xd6, 0xc5, 0x1a, 0xc4, 0x94, 0x99, 0x22, 0xa4, 0xc4, 0xc5, 0x1a, 0x90, 0x9f,
	0x99, 0x57, 0x02, 0xd6, 0xca, 0x6d, 0xc4, 0xa3, 0x97, 0x5b, 0x9c, 0xae, 0x07, 0xb5, 0x21, 0x08,
	0x22, 0x05, 0x08, 0x00, 0x00, 0xff, 0xff, 0x24, 0x01, 0x71, 0x0a, 0x88, 0x00, 0x00, 0x00,
}
